/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
*/
#include <iostream>
#include <array>
#include <cstdlib>

#define PENTAGRAM_SIZE 10000

int main()
{
    char *is_pentagonal = (char *)calloc(3 * (PENTAGRAM_SIZE + 1) * (PENTAGRAM_SIZE + 1), 1);
    int *pentagonal = (int *)malloc(PENTAGRAM_SIZE * sizeof(int));
    for (int n = 0; n < PENTAGRAM_SIZE; n++)
        is_pentagonal[pentagonal[n] = (n + 1) * (3 * (n + 1) - 1) / 2] = true;
    int D = 99999999;
    for (int j = 0; j < PENTAGRAM_SIZE; j++)
        for (int k = j + 1; k < PENTAGRAM_SIZE; k++)
        {
            auto a = pentagonal[k] - pentagonal[j];
            auto b = pentagonal[k] + pentagonal[j];
            if (is_pentagonal[a] && is_pentagonal[b] && D > a)
                D = a;
        }
    std::cout << D << std::endl;
}